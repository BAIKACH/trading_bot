import pandas as pd
import numpy as np

class Backtester:
    def __init__(self, strategy, data):
        self.strategy = strategy
        self.data = data

    def run(self):
        signals = []
        for i in range(len(self.data)):
            signal = self.strategy.get_signal(self.data.iloc[:i+1])
            signals.append(signal)
        signals = pd.Series(signals, index=self.data.index)
        returns = self.data['price'].pct_change().shift(-1) * signals.map({'long': 1, 'short': -1, 'flat': 0})
        cumulative_returns = (1 + returns).cumprod()
        sharpe_ratio = returns.mean() / returns.std() * np.sqrt(252) if returns.std() != 0 else 0
        max_drawdown = (cumulative_returns.cummax() - cumulative_returns).max()
        print(f"Sharpe Ratio: {sharpe_ratio:.2f}")
        print(f"Max Drawdown: {max_drawdown:.2f}")
        return pd.DataFrame({'signal': signals, 'returns': returns})